{"version":3,"sources":["components/common/Button.js","services/taskService.js","components/HexagonEmptyBoard.js","components/EmptyBoard.js","components/common/Input.js","components/TextField.js","components/pages/Home.js","components/common/ColorPicker.js","components/pages/Align.js","components/HexagonNumberedBoard.js","components/NumberedBoard.js","components/pages/Verify.js","components/Navbar.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Button","_ref","children","onClick","className","react_default","a","createElement","Container","styled","div","_templateObject","BASE_PATH","taskService","getCompletedTask","Axios","get","concat","then","res","data","catch","err","save","task","_id","put","post","savedTask","getEmpty","img","src","inputs","verifications","HexagonEmptyBoard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","markHexagon","e","setState","hexagonStyle","fill","stroke","stroke-width","unmarkHexagon","fixMarkHexagon","state","_this2","HexagonEmptyBoard_Container","viewBox","id","points","style","map","i","j","Fragment","xlinkHref","transform","onMouseEnter","onMouseLeave","Component","HexagonEmptyBoard_templateObject","EmptyBoard","EmptyBoard_Container","Instructions","components_HexagonEmptyBoard","EmptyBoard_templateObject","_templateObject2","Input","label","placeholder","onChange","Input_Container","Label","StyledInput","Input_templateObject","Input_templateObject2","textarea","_templateObject3","TextField","TextField_Container","TextField_Instructions","InputContainer","object","TextField_StyledInput","TextField_templateObject","TextField_templateObject2","TextField_templateObject3","_templateObject4","Home","handleSubmitDesc","objectSpread","BoardContainer","components_EmptyBoard","TextFieldContainer","Home_InputContainer","components_TextField","StyledButton","ElementContainer","Home_templateObject","Home_templateObject2","Home_templateObject3","Home_templateObject4","_templateObject5","ColorPicker","handleClick","currentColor","target","attributes","color","value","ColorPicker_Container","Color","selected","Clear","CurrentColor","ColorPicker_templateObject","button","ColorPicker_templateObject2","ColorPicker_templateObject3","ColorPicker_templateObject4","Align","handleSubmitVerificaion","apply","toConsumableArray","taskToVerify","StepsContainer","Step","Align_BoardContainer","common_ColorPicker","setColor","Align_StyledButton","Align_templateObject","Align_templateObject2","Align_templateObject3","Align_templateObject4","Align_templateObject5","HexagonNumberedBoard","HexagonNumberedBoard_Container","x","y","text-anchor","font-size","HexagonNumberedBoard_templateObject","NumberedBoard","NumberedBoard_Container","NumberedBoard_Instructions","components_HexagonNumberedBoard","NumberedBoard_templateObject","NumberedBoard_templateObject2","Verify","Verify_StepsContainer","Verify_Step","StepElement","NextButton","Verify_BoardContainer","components_NumberedBoard","Verify_templateObject","Verify_templateObject2","Verify_templateObject3","Verify_templateObject4","Verify_templateObject5","_templateObject6","_templateObject7","Navbar","Navbar_Container","MenuContainer","MenuItem","MenuItemLink","to","Navbar_templateObject","li","Navbar_templateObject2","Link","Navbar_templateObject3","Navbar_templateObject4","Header","Header_Container","Title","Header_templateObject","Header_templateObject2","Footer","Footer_Container","Divider","Info","Footer_templateObject","Footer_templateObject2","Footer_templateObject3","App","react_router_dom","App_Container","components_Navbar","components_Header","Content","react_router","exact","path","component","components_Footer","App_templateObject","App_templateObject2","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eeff1c10.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = ({ children, onClick, className }) => (\n  <Container onClick={onClick} className={className}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n\nconst Container = styled.div`\n  align-self: center;\n  width: 90%;\n  height: 40px;\n  background: blue;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  transition: all 300ms;\n  border-radius: 4px;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import Axios from \"axios\";\n\nconst BASE_PATH = \"/api/task\";\n\n// const Axios = Axios.create({\n//     withCredentials: true,\n// })\n\nexport default {\n  getCompletedTask,\n  save,\n  getEmpty\n};\n\nfunction getCompletedTask() {\n  var queryStr = \"\"; //useless for now\n  return Axios.get(`${BASE_PATH}?${queryStr}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n\nfunction save(task) {\n  if (task._id) {\n    //for edit. Useless for now\n    return Axios.put(`${BASE_PATH}/${task._id}`, task)\n      .then(res => res.data)\n      .catch(err => {\n        throw err;\n      });\n  } else {\n    return Axios.post(`${BASE_PATH}`, task)\n      .then(res => {\n        const savedTask = res.data; //includes the _id from DB\n        return savedTask;\n      })\n      .catch(err => {\n        throw err;\n      });\n  }\n}\n\nfunction getEmpty() {\n  const emptyTask = {\n    img: { _id: \"\", src: \"\" },\n    inputs: [],\n    verifications: []\n  };\n  return emptyTask;\n}\n\nfunction getById(taskId) {\n  if (!taskId) return Promise.reject(\"no task is\");\n  return Axios.get(`${BASE_PATH}/${taskId}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n\nfunction remove(taskId) {\n  return Axios.delete(`${BASE_PATH}/${taskId}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nclass HexagonEmptyBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hexagonStyle: {\n        fill: \"none\",\n        stroke: \"black\",\n        \"stroke-width\": \"2\"\n      }\n    };\n  }\n\n  markHexagon = e => {\n    this.setState({\n      hexagonStyle: {\n        fill: \"white\",\n        stroke: \"black\",\n        \"stroke-width\": \"4\"\n      }\n    });\n  };\n\n  unmarkHexagon = e => {\n    this.setState({\n      hexagonStyle: {\n        fill: \"white\",\n        stroke: \"black\",\n        \"stroke-width\": \"2\"\n      }\n    });\n  };\n\n  // Also need to unmark on second click (toggle)\n  // TODO: stay fixed no regardless of mouseleave!\n  fixMarkHexagon = e => {\n    this.setState({\n      hexagonStyle: {\n        fill: \"white\",\n        stroke: \"black\",\n        \"stroke-width\": \"5\"\n      }\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        <svg viewBox=\"0 0 1350 770\">\n          <defs>\n            <polygon\n              id=\"hexagon\"\n              points=\"50,25 100,25 125,68 100,111 50,111 25,68\"\n              style={this.state.hexagonStyle}\n            />\n          </defs>\n          {[0, 1, 2, 3, 4, 5, 6, 7].map(i => {\n            return [0, 2, 4, 6, 8, 10, 12, 14].map(j => {\n              return (\n                <>\n                  <use\n                    xlinkHref=\"#hexagon\"\n                    transform={\"translate(\" + j * 75 + \",\" + i * 86 + \")\"}\n                    onClick={this.fixMarkHexagon}\n                    onMouseEnter={this.markHexagon}\n                    onMouseLeave={this.unmarkHexagon}\n                  />\n                  <use\n                    xlinkHref=\"#hexagon\"\n                    transform={\n                      \"translate(\" + (j + 1) * 75 + \",\" + (i * 86 + 43) + \")\"\n                    }\n                    onClick={this.fixMarkHexagon}\n                    onMouseEnter={this.markHexagon}\n                    onMouseLeave={this.unmarkHexagon}\n                  />\n                </>\n              );\n            });\n          })}\n          Sorry, your browser does not support inline SVG.\n        </svg>\n      </Container>\n    );\n  }\n}\n\nexport default HexagonEmptyBoard;\n\nconst Container = styled.div`\n  margin-left: 2em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Components\nimport HexagonEmptyBoard from \"./HexagonEmptyBoard\";\n\nconst EmptyBoard = props => {\n  return (\n    <Container>\n      <Instructions />\n      <HexagonEmptyBoard />\n    </Container>\n  );\n};\n\nexport default EmptyBoard;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = ({ label, placeholder, className, onChange }) => {\n  return (\n    <Container className={className}>\n      <Label>{label}</Label>\n      <StyledInput placeholder={placeholder} onChange={onChange} />\n    </Container>\n  );\n};\n\nexport default Input;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.div`\n  font-size: 14px;\n  margin-top: 16px;\n  margin-bottom: 6px;\n`;\n\nconst StyledInput = styled.textarea`\n  align-self: center;\n  width: 90%;\n  height: 120px;\n  border: 3px solid #cccccc;\n  font-family: Tahoma, sans-serif;\n  box-sizing: border-box;\n  padding: 6px;\n  color: #444;\n  font-size: 18px;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"./common/Input\";\n\nclass TextField extends Component {\n  state = {};\n\n  // TODO: functions: handleInputChange, addInput, etc.\n\n  render() {\n    return (\n      <>\n        <Container>\n          <Instructions />\n          <InputContainer>\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((object, i) => (\n              <StyledInput placeholder=\"input...\" label={i + 1} />\n            ))}\n          </InputContainer>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TextField;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n\nconst StyledInput = styled(Input)`\n  background-color: #f5f5f5;\n`;\nconst InputContainer = styled.div``;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../common/Button\";\nimport taskService from \"../../services/taskService\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport EmptyBoard from \"../EmptyBoard\";\nimport TextField from \"../TextField\";\n\nclass Home extends Component {\n  state = {};\n\n  componentDidMount() {\n    const task = taskService.getEmpty();\n    this.setState({ task }); //inputs\n  }\n  handleSubmitDesc = () => {\n    // get values from 'inputs'\n    // put the values in state, inside the empty 'inputs' array\n    taskService.save({ ...this.state });\n  };\n  render() {\n    return (\n      <>\n        <BoardContainer>\n          <h1>Task</h1>\n          <EmptyBoard />\n        </BoardContainer>\n        <TextFieldContainer>\n          <InputContainer>\n            <TextField />\n          </InputContainer>\n          <StyledButton onClick={this.handleSubmitDesc}>Send</StyledButton>\n        </TextFieldContainer>\n      </>\n    );\n  }\n}\n\nexport default Home;\nconst ElementContainer = styled.div`\n  margin: 1em 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 65vh;\n  overflow: scroll;\n`;\nconst InputContainer = styled(ElementContainer)`\n  max-height: 53vh;\n  border-radius: 4px;\n  transition: all 300ms;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  }\n`;\nconst BoardContainer = styled(ElementContainer)``;\nconst StyledButton = styled(Button)`\n  width: 25%;\n  align-self: left;\n  background-color: lightseagreen;\n`;\nconst TextFieldContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleClick = e => {\n    this.setState({\n      currentColor: e.target.attributes.color.value\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        {[\n          \"gold\",\n          \"limegreen\",\n          \"crimson\",\n          \"black\",\n          \"dodgerblue\",\n          \"violet\",\n          \"orange\"\n        ].map(color => (\n          <Color\n            color={color}\n            selected={color === this.state.currentColor}\n            onClick={this.handleClick}\n          />\n        ))}\n        <Clear\n          color=\"white\"\n          selected={this.state.currentColor === \"white\"}\n          onClick={this.handleClick}\n        />\n        <CurrentColor color={this.state.currentColor} />\n      </Container>\n    );\n  }\n}\n\nexport default ColorPicker;\n\nconst Container = styled.div`\n  align-self: center;\n  height: 60px;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  transition: all 300ms;\n  border-radius: 4px;\n  cursor: pointer;\n`;\nconst Color = styled.button`\n  background: ${props => props.color};\n  width: 3em;\n  height: 3em;\n  margin: 0 0.5em;\n  border-radius: 50%;\n  border: 1px solid black;\n  outline: none;\n  box-shadow: ${props =>\n    props.selected ? \"0 5px 10px rgba(0, 0, 0, 0.8)\" : \"\"};\n  transition: all 300ms;\n\n  &:hover {\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.8);\n  }\n`;\nconst Clear = styled(Color)`\n  border-radius: 0%;\n`;\nconst CurrentColor = styled(Color)`\n  width: 1.5em;\n  height: 1.5em;\n  margin-left: 2em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport taskService from \"../../services/taskService\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport EmptyBoard from \"../EmptyBoard\";\nimport ColorPicker from \"../common/ColorPicker\";\nimport Button from \"../common/Button\";\n\nclass Align extends Component {\n  state = {};\n  setColor(currentColor) {\n    this.setState(...currentColor);\n  }\n  componentDidMount() {\n    const taskToVerify = taskService.getCompletedTask();\n    this.setState({ taskToVerify }); // \"verify\" page\n  }\n  handleSubmitVerificaion = () => {\n    // completedTaskWithVerification.verification.push(new verification)\n    // taskService.save({ completedTaskWithVerification });\n  };\n  render() {\n    return (\n      <>\n        <StepsContainer>\n          <h1>Task</h1>\n          <Step>Show next line of Instructions when user done</Step>\n        </StepsContainer>\n        <BoardContainer>\n          <ColorPicker\n            currentColor={this.props.currentColor}\n            setColor={this.setColor}\n          />\n          <EmptyBoard currentColor={this.state.currentColor} />\n          <StyledButton>Done</StyledButton>\n        </BoardContainer>\n      </>\n    );\n  }\n}\n\nexport default Align;\n\nconst ElementContainer = styled.div`\n  margin: 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 65vh;\n`;\nconst Step = styled.div``;\nconst StepsContainer = styled(ElementContainer)``;\nconst BoardContainer = styled(ElementContainer)`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledButton = styled(Button)`\n  width: 25%;\n  align-self: flex-end;\n  background-color: lightseagreen;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HexagonNumberedBoard = () => {\n  let hexagonStyle = {\n    fill: \"white\",\n    stroke: \"black\",\n    \"stroke-width\": \"2\"\n  };\n\n  return (\n    <Container>\n      <svg viewBox=\"0 0 1350 770\">\n        <defs>\n          <polygon\n            id=\"hexagon\"\n            points=\"50,25 100,25 125,68 100,111 50,111 25,68\"\n            style={hexagonStyle}\n          />\n          <text x=\"32\" y=\"50\" text-anchor=\"middle\" fill=\"white\" font-size=\"30\">\n            X\n          </text>\n        </defs>\n        {[0, 1, 2, 3, 4, 5, 6, 7].map(i => {\n          return [0, 2, 4, 6, 8, 10, 12, 14].map(j => {\n            return (\n              <>\n                <use\n                  xlinkHref=\"#hexagon\"\n                  transform={\"translate(\" + j * 75 + \",\" + i * 86 + \")\"}\n                  // style={{ fill: this.state.colorArray[i] }}\n                />\n                <use\n                  xlinkHref=\"#hexagon\"\n                  transform={\n                    \"translate(\" + (j + 1) * 75 + \",\" + (i * 86 + 43) + \")\"\n                  }\n                />\n              </>\n            );\n          });\n        })}\n        Sorry, your browser does not support inline SVG.\n      </svg>\n    </Container>\n  );\n};\n\nexport default HexagonNumberedBoard;\n\nconst Container = styled.div`\n  margin-left: 2em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Components\nimport HexagonNumberedBoard from \"./HexagonNumberedBoard\";\n\nconst NumberedBoard = () => {\n  return (\n    <Container>\n      <Instructions />\n      <HexagonNumberedBoard />\n    </Container>\n  );\n};\n\nexport default NumberedBoard;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport taskService from \"../../services/taskService\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport NumberedBoard from \"../NumberedBoard\";\nimport ColorPicker from \"../common/ColorPicker\";\nimport Button from \"../common/Button\";\n\nclass Verify extends Component {\n  state = {\n    currentColor: \"white\"\n  };\n\n  componentDidMount() {\n    const taskToVerify = taskService.getCompletedTask();\n    this.setState({ taskToVerify }); // \"verify\" page\n  }\n  handleSubmitVerificaion = () => {\n    // completedTaskWithVerification.verification.push(new verification)\n    // taskService.save({ completedTaskWithVerification });\n  };\n  render() {\n    return (\n      <>\n        <StepsContainer>\n          <h1>Verification Task</h1>\n          <Step>\n            <StepElement>\n              Show next line when user clicks next. In the end the \"Next\" button\n              is replaced with \"Done\". Location of Next/Done buttons may\n              change.\"\n            </StepElement>\n            <NextButton>Next</NextButton>\n          </Step>\n        </StepsContainer>\n        <BoardContainer>\n          <ColorPicker />\n          <NumberedBoard />\n          {/* <DoneButton>Done</DoneButton> */}\n        </BoardContainer>\n      </>\n    );\n  }\n}\n\nexport default Verify;\n\nconst ElementContainer = styled.div`\n  margin: 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 65vh;\n`;\nconst Step = styled.div`\n  display: flex;\n`;\nconst StepsContainer = styled(ElementContainer)``;\nconst StepElement = styled(ElementContainer)`\n  background-color: lightblue;\n  padding: 0.5em;\n  border-radius: 4px;\n`;\nconst BoardContainer = styled(ElementContainer)`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n`;\nconst DoneButton = styled(Button)`\n  width: 25%;\n  align-self: flex-end;\n  background-color: lightseagreen;\n`;\nconst NextButton = styled(Button)`\n  background-color: blue;\n  width: 30%;\n  margin-right: 3em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <Container>\n        <MenuContainer>\n          {/* <MenuItem>\n            <MenuItemLink to=\"/instructions\">Instructions</MenuItemLink>\n          </MenuItem> */}\n          <MenuItem>\n            <MenuItemLink to=\"/describe\">Describe</MenuItemLink>\n          </MenuItem>\n          <MenuItem>\n            <MenuItemLink to=\"/align\">Align</MenuItemLink>\n          </MenuItem>\n          <MenuItem>\n            <MenuItemLink to=\"/verify\">Verify</MenuItemLink>\n          </MenuItem>\n        </MenuContainer>\n      </Container>\n    );\n  }\n}\n\nexport default Navbar;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n`;\nconst MenuContainer = styled.li`\n  display: flex;\n  color: #222;\n  list-style: none;\n`;\nconst MenuItemLink = styled(Link)`\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  padding: 20px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: inherit;\n  transition: all 300ms;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);\n  }\n`;\nconst MenuItem = styled.li`\n  padding: 1em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Header = () => {\n  return (\n    <Container>\n      <Title>Hexagon App</Title>\n    </Container>\n  );\n};\n\nexport default Header;\n\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100px;\n  border-bottom: 1px solid #000;\n  background: #fafafa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 24px;\n`;\n\nconst Title = styled.div`\n  font-size: 36px;\n  color: #444;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Footer = () => {\n  return (\n    <Container>\n      <Divider />\n      <Info>© ONLP Lab 2019</Info>\n    </Container>\n  );\n};\n\nexport default Footer;\n\nconst Container = styled.div`\n  width: 500px;\n  margin: 1em auto;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Divider = styled.div`\n  width: 500px;\n  height: 1px;\n  background: #444;\n  margin: 20px 0;\n`;\n\nconst Info = styled.div`\n  color: #444;\n  font-size: 18px;\n  align-self: flex-end;\n`;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\n// components\nimport Home from \"./components/pages/Home\";\nimport Align from \"./components/pages/Align\";\nimport Verify from \"./components/pages/Verify\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Container>\n          <Navbar />\n          <Header />\n          <Content>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/describe\" exact component={Home} />\n              <Route path=\"/align\" exact component={Align} />\n              <Route path=\"/verify\" exact component={Verify} />\n            </Switch>\n          </Content>\n          <Footer />\n        </Container>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  background: #e0e0e0;\n  display: flex;\n  flex-direction: column;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-self: center;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}