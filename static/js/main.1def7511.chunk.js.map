{"version":3,"sources":["components/common/Button.js","services/taskService.js","components/HexagonGrid.js","components/Grid.js","components/common/Input.js","components/TextField.js","components/pages/Home.js","components/common/ColorPalette.js","components/pages/Align.js","components/HexagonGridN.js","components/GridN.js","components/pages/Verify.js","components/Navbar.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Button","_ref","children","onClick","className","react_default","a","createElement","Container","styled","div","_templateObject","BASE_PATH","taskService","getCompletedTask","Axios","get","concat","then","res","data","catch","err","save","task","_id","put","post","savedTask","getEmpty","img","src","inputs","verifications","HexagonGrid","HexagonGrid_Container","viewBox","id","points","style","fill","stroke","stroke-width","map","i","Fragment","xlinkHref","transform","HexagonGrid_templateObject","Grid","Grid_Container","Instructions","components_HexagonGrid","Grid_templateObject","_templateObject2","Input","label","placeholder","onChange","Input_Container","Label","StyledInput","Input_templateObject","Input_templateObject2","textarea","_templateObject3","TextField","state","TextField_Container","TextField_Instructions","InputContainer","object","TextField_StyledInput","Component","TextField_templateObject","TextField_templateObject2","TextField_templateObject3","_templateObject4","Home","handleSubmitDesc","Object","objectSpread","_this","this","setState","GridContainer","components_Grid","TextFieldContainer","Home_InputContainer","components_TextField","StyledButton","ElementContainer","Home_templateObject","Home_templateObject2","Home_templateObject3","Home_templateObject4","_templateObject5","ColorPalette","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","color","isToggleOn","handleClick","bind","assertThisInitialized","prevState","ColorPalette_Container","Yellow","Green","Red","Black","Blue","Violet","Orange","Clear","ColorPalette_templateObject","Color","button","ColorPalette_templateObject2","ColorPalette_templateObject3","ColorPalette_templateObject4","ColorPalette_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","Align","handleSubmitVerificaion","taskToVerify","StepsContainer","Step","Align_GridContainer","common_ColorPalette","Align_StyledButton","Align_templateObject","Align_templateObject2","Align_templateObject3","Align_templateObject4","Align_templateObject5","HexagonGridN_Container","x","y","text-anchor","font-size","HexagonGridN_templateObject","GridN","GridN_Container","GridN_Instructions","HexagonGridN","GridN_templateObject","GridN_templateObject2","Verify","Verify_StepsContainer","Verify_Step","StepElement","NextButton","Verify_GridContainer","components_GridN","Verify_templateObject","Verify_templateObject2","Verify_templateObject3","Verify_templateObject4","Verify_templateObject5","Verify_templateObject6","Verify_templateObject7","Navbar","Navbar_Container","MenuContainer","MenuItem","MenuItemLink","to","Navbar_templateObject","li","Navbar_templateObject2","Link","Navbar_templateObject3","Navbar_templateObject4","Header","Header_Container","Title","Header_templateObject","Header_templateObject2","Footer","Footer_Container","Divider","Info","Footer_templateObject","Footer_templateObject2","Footer_templateObject3","App","react_router_dom","App_Container","components_Navbar","components_Header","Content","react_router","exact","path","component","components_Footer","App_templateObject","App_templateObject2","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yuBAGA,IAMeA,EANA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,QAASC,EAAtBH,EAAsBG,UAAtB,OACbC,EAAAC,EAAAC,cAACC,EAAD,CAAWL,QAASA,EAASC,UAAWA,GACrCF,IAMCM,EAAYC,IAAOC,IAAVC,sBCTTC,EAAY,YAMHC,EAAA,CACbC,iBAKF,WAEE,OAAOC,IAAMC,IAAN,GAAAC,OAAaL,EAAb,KAAAK,OADQ,KAEZC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBC,MAAM,SAAAC,GACL,MAAMA,KATVC,KAaF,SAAcC,GACZ,OAAIA,EAAKC,IAEAV,IAAMW,IAAN,GAAAT,OAAaL,EAAb,KAAAK,OAA0BO,EAAKC,KAAOD,GAC1CN,KAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBC,MAAM,SAAAC,GACL,MAAMA,IAGHP,IAAMY,KAAN,GAAAV,OAAcL,GAAaY,GAC/BN,KAAK,SAAAC,GACJ,IAAMS,EAAYT,EAAIC,KACtB,OAAOQ,IAERP,MAAM,SAAAC,GACL,MAAMA,KA3BZO,SAgCF,WAME,MALkB,CAChBC,IAAK,CAAEL,IAAK,GAAIM,IAAK,IACrBC,OAAQ,GACRC,cAAe,kGC5CnB,IAkGeC,EAlGK,WAOlB,OACE7B,EAAAC,EAAAC,cAAC4B,EAAD,KAGE9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK6B,QAAQ,gBAEX/B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,WACE8B,GAAG,UACHC,OAAO,2CACPC,MAjBO,CACjBC,KAAM,QACNC,OAAQ,QACRC,eAAgB,QAkBT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,IAAI,SAACrC,EAAGsC,GAAJ,OAC5BvC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuC,SAAA,KACExC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,aAAeH,EAAI,IAAU,GAAJA,EAAS,MAE/CvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAAkC,GAAJH,EAAS,MAEpDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAAkC,GAAJH,EAAS,MAEpDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAAkC,GAAJH,EAAS,MAEpDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAAkC,GAAJH,EAAS,MAEpDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAAmC,GAAJH,EAAS,MAErDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAAmC,GAAJH,EAAS,MAErDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAmC,GAAJH,EAAS,MAErDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAA+B,GAAJH,EAAS,IAAM,MAEvDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAmC,GAAJH,EAAS,IAAM,MAG3DvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAmC,GAAJH,EAAS,IAAM,MAE3DvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAmC,GAAJH,EAAS,IAAM,MAE3DvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAmC,GAAJH,EAAS,IAAM,MAE3DvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAoC,GAAJH,EAAS,IAAM,MAE5DvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAoC,GAAJH,EAAS,IAAM,MAE5DvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,mBAAoC,GAAJH,EAAS,IAAM,SA3ElE,uDAwFFpC,EAAYC,IAAOC,IAAVsC,+ICjGf,IASeC,EATF,WACX,OACE5C,EAAAC,EAAAC,cAAC2C,EAAD,KACE7C,EAAAC,EAAAC,cAAC4C,EAAD,MACA9C,EAAAC,EAAAC,cAAC6C,EAAD,QAOA5C,EAAYC,IAAOC,IAAV2C,KACTF,EAAe1C,IAAOC,IAAV4C,ihBCflB,IASeC,EATD,SAAAtD,GAAiD,IAA9CuD,EAA8CvD,EAA9CuD,MAAOC,EAAuCxD,EAAvCwD,YAAarD,EAA0BH,EAA1BG,UAAWsD,EAAezD,EAAfyD,SAC9C,OACErD,EAAAC,EAAAC,cAACoD,EAAD,CAAWvD,UAAWA,GACpBC,EAAAC,EAAAC,cAACqD,EAAD,KAAQJ,GACRnD,EAAAC,EAAAC,cAACsD,EAAD,CAAaJ,YAAaA,EAAaC,SAAUA,MAOjDlD,EAAYC,IAAOC,IAAVoD,KAKTF,EAAQnD,IAAOC,IAAVqD,KAMLF,EAAcpD,IAAOuD,SAAVC,6TCAFC,6MApBbC,MAAQ,2EAKN,OACE9D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuC,SAAA,KACExC,EAAAC,EAAAC,cAAC6D,EAAD,KACE/D,EAAAC,EAAAC,cAAC8D,EAAD,MACAhE,EAAAC,EAAAC,cAAC+D,EAAD,KACG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAI3B,IAAI,SAAC4B,EAAQ3B,GAAT,OACnCvC,EAAAC,EAAAC,cAACiE,EAAD,CAAaf,YAAY,WAAWD,MAAOZ,EAAI,gBAZrC6B,aAuBlBjE,EAAYC,IAAOC,IAAVgE,KACTvB,EAAe1C,IAAOC,IAAViE,KAEZd,EAAcpD,YAAO8C,EAAP9C,CAAHmE,KAGXN,EAAiB7D,IAAOC,IAAVmE,mxBCOLC,6MA7BbX,MAAQ,KAMRY,iBAAmB,WAGjBlE,EAAYU,KAAZyD,OAAAC,EAAA,EAAAD,CAAA,GAAsBE,EAAKf,4FAN3B,IAAM3C,EAAOX,EAAYgB,WACzBsD,KAAKC,SAAS,CAAE5D,0CAQhB,OACEnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuC,SAAA,KACExC,EAAAC,EAAAC,cAAC8E,GAAD,KACEhF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAC+E,EAAD,OAEFjF,EAAAC,EAAAC,cAACgF,GAAD,KACElF,EAAAC,EAAAC,cAACiF,GAAD,KACEnF,EAAAC,EAAAC,cAACkF,EAAD,OAEFpF,EAAAC,EAAAC,cAACmF,GAAD,CAAcvF,QAASgF,KAAKJ,kBAA5B,iBAvBSN,aA+BbkB,GAAmBlF,IAAOC,IAAVkF,KAOhBtB,GAAiB7D,YAAOkF,GAAPlF,CAAHoF,KAWdR,GAAgB5E,YAAOkF,GAAPlF,CAAHqF,KACbJ,GAAejF,YAAOT,EAAPS,CAAHsF,KAKZR,GAAqB9E,IAAOC,IAAVsF,04CC3BTC,eAlCb,SAAAA,EAAYC,GAAO,IAAAhB,EAAA,OAAAF,OAAAmB,EAAA,EAAAnB,CAAAG,KAAAc,IACjBf,EAAAF,OAAAoB,EAAA,EAAApB,CAAAG,KAAAH,OAAAqB,EAAA,EAAArB,CAAAiB,GAAAK,KAAAnB,KAAMe,KACD/B,MAAQ,CACXoC,MAAO,OACPC,YAAY,GAGdtB,EAAKuB,YAAcvB,EAAKuB,YAAYC,KAAjB1B,OAAA2B,GAAA,EAAA3B,CAAAE,IAPFA,6EAWjBC,KAAKC,SAAS,SAAAwB,GAAS,MAAK,CAC1BJ,YAAaI,EAAUJ,+CAKzB,OACEnG,EAAAC,EAAAC,cAACsG,GAAD,KACExG,EAAAC,EAAAC,cAACuG,GAAD,CAAQ3G,QAASgF,KAAKsB,cACtBpG,EAAAC,EAAAC,cAACwG,GAAD,CAAO5G,QAASgF,KAAKsB,cACrBpG,EAAAC,EAAAC,cAACyG,GAAD,CAAK7G,QAASgF,KAAKsB,aAChBtB,KAAKhB,MAAMqC,WAAa,KAAO,OAElCnG,EAAAC,EAAAC,cAAC0G,GAAD,CAAO9G,QAASgF,KAAKsB,cACrBpG,EAAAC,EAAAC,cAAC2G,GAAD,CAAM/G,QAASgF,KAAKsB,cACpBpG,EAAAC,EAAAC,cAAC4G,GAAD,CAAQhH,QAASgF,KAAKsB,cACtBpG,EAAAC,EAAAC,cAAC6G,GAAD,CAAQjH,QAASgF,KAAKsB,cACtBpG,EAAAC,EAAAC,cAAC8G,GAAD,CAAOlH,QAASgF,KAAKsB,sBA7BFhC,aAqCrBjE,GAAYC,IAAOC,IAAV4G,MAYTC,GAAQ9G,IAAO+G,OAAVC,MAcLT,GAAMvG,YAAO8G,GAAP9G,CAAHiH,MAGHZ,GAASrG,YAAO8G,GAAP9G,CAAHkH,MAGNZ,GAAQtG,YAAO8G,GAAP9G,CAAHmH,MAGLV,GAAOzG,YAAO8G,GAAP9G,CAAHoH,MAGJV,GAAS1G,YAAO8G,GAAP9G,CAAHqH,MAGNb,GAAQxG,YAAO8G,GAAP9G,CAAHsH,MAGLX,GAAS3G,YAAO8G,GAAP9G,CAAHuH,MAGNX,GAAQ5G,YAAO8G,GAAP9G,CAAHwH,ilBCjDIC,8MA3Bb/D,MAAQ,KAMRgE,wBAA0B,gGAHxB,IAAMC,EAAevH,EAAYC,mBACjCqE,KAAKC,SAAS,CAAEgD,kDAOhB,OACE/H,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuC,SAAA,KACExC,EAAAC,EAAAC,cAAC8H,GAAD,KACEhI,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAC+H,GAAD,uDAEFjI,EAAAC,EAAAC,cAACgI,GAAD,KACElI,EAAAC,EAAAC,cAACiI,GAAD,MACAnI,EAAAC,EAAAC,cAAC+E,EAAD,MACAjF,EAAAC,EAAAC,cAACkI,GAAD,sBArBUhE,aA8BdkB,GAAmBlF,IAAOC,IAAVgI,MAMhBJ,GAAO7H,IAAOC,IAAViI,MACJN,GAAiB5H,YAAOkF,GAAPlF,CAAHmI,MACdvD,GAAgB5E,YAAOkF,GAAPlF,CAAHoI,MAKbnD,GAAejF,YAAOT,EAAPS,CAAHqI,oGClDlB,IA6Ge5G,GA7GK,WAOlB,OACE7B,EAAAC,EAAAC,cAACwI,GAAD,KAGE1I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK6B,QAAQ,gBAEX/B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,WACE8B,GAAG,UACHI,OAAO,UACPC,eAAa,IACbJ,OAAO,2CACPC,MAnBO,CACjBC,KAAM,QACNC,OAAQ,QACRC,eAAgB,OAkBRrC,EAAAC,EAAAC,cAAA,QACEyI,EAAE,KACFC,EAAE,KACFC,cAAY,SACZ1G,KAAK,QACL2G,YAAU,MALZ,MAWD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGxG,IAAI,SAACrC,EAAGsC,GAAJ,OAC5BvC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuC,SAAA,KACExC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,aAAeH,EAAI,IAAU,GAAJA,EAAS,MAE/CvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAAkC,GAAJH,EAAS,MAEpDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAAkC,GAAJH,EAAS,MAEpDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAAkC,GAAJH,EAAS,MAEpDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAAkC,GAAJH,EAAS,MAEpDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAAmC,GAAJH,EAAS,MAErDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAAmC,GAAJH,EAAS,MAErDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAmC,GAAJH,EAAS,MAErDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,iBAA+B,GAAJH,EAAS,IAAM,MAEvDvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAmC,GAAJH,EAAS,IAAM,MAG3DvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAmC,GAAJH,EAAS,IAAM,MAE3DvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAmC,GAAJH,EAAS,IAAM,MAE3DvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAmC,GAAJH,EAAS,IAAM,MAE3DvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAoC,GAAJH,EAAS,IAAM,MAE5DvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,kBAAoC,GAAJH,EAAS,IAAM,MAE5DvC,EAAAC,EAAAC,cAAA,OACEuC,UAAU,WACVC,UAAW,mBAAoC,GAAJH,EAAS,IAAM,SAtFlE,uDAmGFpC,GAAYC,IAAOC,IAAV0I,oJC5Gf,IASeC,GATD,WACZ,OACEhJ,EAAAC,EAAAC,cAAC+I,GAAD,KACEjJ,EAAAC,EAAAC,cAACgJ,GAAD,MACAlJ,EAAAC,EAAAC,cAACiJ,GAAD,QAOAhJ,GAAYC,IAAOC,IAAV+I,MACTtG,GAAe1C,IAAOC,IAAVgJ,i4BC2BHC,8MAlCbxF,MAAQ,KAMRgE,wBAA0B,gGAHxB,IAAMC,EAAevH,EAAYC,mBACjCqE,KAAKC,SAAS,CAAEgD,kDAOhB,OACE/H,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuC,SAAA,KACExC,EAAAC,EAAAC,cAACqJ,GAAD,KACEvJ,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACsJ,GAAD,KACExJ,EAAAC,EAAAC,cAACuJ,GAAD,+IAKAzJ,EAAAC,EAAAC,cAACwJ,GAAD,eAGJ1J,EAAAC,EAAAC,cAACyJ,GAAD,KACE3J,EAAAC,EAAAC,cAACiI,GAAD,MACAnI,EAAAC,EAAAC,cAAC0J,GAAD,eA3BWxF,aAqCfkB,GAAmBlF,IAAOC,IAAVwJ,MAMhB5B,GAAO7H,IAAOC,IAAVyJ,MAGJ9B,GAAiB5H,YAAOkF,GAAPlF,CAAH2J,MACdN,GAAcrJ,YAAOkF,GAAPlF,CAAH4J,MAKXhF,GAAgB5E,YAAOkF,GAAPlF,CAAH6J,MAUbP,IALatJ,YAAOT,EAAPS,CAAH8J,MAKG9J,YAAOT,EAAPS,CAAH+J,4xBC7CDC,oLArBX,OACEpK,EAAAC,EAAAC,cAACmK,GAAD,KACErK,EAAAC,EAAAC,cAACoK,GAAD,KAIEtK,EAAAC,EAAAC,cAACqK,GAAD,KACEvK,EAAAC,EAAAC,cAACsK,GAAD,CAAcC,GAAG,aAAjB,aAEFzK,EAAAC,EAAAC,cAACqK,GAAD,KACEvK,EAAAC,EAAAC,cAACsK,GAAD,CAAcC,GAAG,UAAjB,UAEFzK,EAAAC,EAAAC,cAACqK,GAAD,KACEvK,EAAAC,EAAAC,cAACsK,GAAD,CAAcC,GAAG,WAAjB,oBAfSrG,aAyBfjE,GAAYC,IAAOC,IAAVqK,MAMTJ,GAAgBlK,IAAOuK,GAAVC,MAKbJ,GAAepK,YAAOyK,IAAPzK,CAAH0K,MAmBZP,GAAWnK,IAAOuK,GAAVI,0aCxDd,IAQeC,GARA,WACb,OACEhL,EAAAC,EAAAC,cAAC+K,GAAD,KACEjL,EAAAC,EAAAC,cAACgL,GAAD,sBAOA/K,GAAYC,IAAOC,IAAV8K,MAaTD,GAAQ9K,IAAOC,IAAV+K,kdCvBX,IASeC,GATA,WACb,OACErL,EAAAC,EAAAC,cAACoL,GAAD,KACEtL,EAAAC,EAAAC,cAACqL,GAAD,MACAvL,EAAAC,EAAAC,cAACsL,GAAD,6BAOArL,GAAYC,IAAOC,IAAVoL,MAQTF,GAAUnL,IAAOC,IAAVqL,MAOPF,GAAOpL,IAAOC,IAAVsL,6SChBV,IAsBeC,GAtBH,WACV,OACE5L,EAAAC,EAAAC,cAAA,OAAKH,UAAU,OACbC,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,KACE7L,EAAAC,EAAAC,cAAC4L,GAAD,KACE9L,EAAAC,EAAAC,cAAC6L,GAAD,MACA/L,EAAAC,EAAAC,cAAC8L,GAAD,MACAhM,EAAAC,EAAAC,cAAC+L,GAAD,KACEjM,EAAAC,EAAAC,cAACgM,EAAA,EAAD,KACElM,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5H,IACjCzE,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOE,KAAK,YAAYD,OAAK,EAACE,UAAW5H,IACzCzE,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOE,KAAK,SAASD,OAAK,EAACE,UAAWxE,KACtC7H,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOE,KAAK,UAAUD,OAAK,EAACE,UAAW/C,OAG3CtJ,EAAAC,EAAAC,cAACoM,GAAD,UASJnM,GAAYC,IAAOC,IAAVkM,MAOTN,GAAU7L,IAAOC,IAAVmM,MChCOC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/M,EAAAC,EAAAC,cAAC8M,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxM,KAAK,SAAAyM,GACjCA,EAAaC","file":"static/js/main.1def7511.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = ({ children, onClick, className }) => (\n  <Container onClick={onClick} className={className}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n\nconst Container = styled.div`\n  align-self: center;\n  width: 90%;\n  height: 40px;\n  background: blue;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  transition: all 300ms;\n  border-radius: 4px;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import Axios from \"axios\";\n\nconst BASE_PATH = \"/api/task\";\n\n// const Axios = Axios.create({\n//     withCredentials: true,\n// })\n\nexport default {\n  getCompletedTask,\n  save,\n  getEmpty\n};\n\nfunction getCompletedTask() {\n  var queryStr = \"\"; //useless for now\n  return Axios.get(`${BASE_PATH}?${queryStr}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n\nfunction save(task) {\n  if (task._id) {\n    //for edit. Useless for now\n    return Axios.put(`${BASE_PATH}/${task._id}`, task)\n      .then(res => res.data)\n      .catch(err => {\n        throw err;\n      });\n  } else {\n    return Axios.post(`${BASE_PATH}`, task)\n      .then(res => {\n        const savedTask = res.data; //includes the _id from DB\n        return savedTask;\n      })\n      .catch(err => {\n        throw err;\n      });\n  }\n}\n\nfunction getEmpty() {\n  const emptyTask = {\n    img: { _id: \"\", src: \"\" },\n    inputs: [],\n    verifications: []\n  };\n  return emptyTask;\n}\n\nfunction getById(taskId) {\n  if (!taskId) return Promise.reject(\"no task is\");\n  return Axios.get(`${BASE_PATH}/${taskId}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n\nfunction remove(taskId) {\n  return Axios.delete(`${BASE_PATH}/${taskId}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HexagonGrid = () => {\n  let hexagonStyle = {\n    fill: \"white\",\n    stroke: \"black\",\n    \"stroke-width\": \"2\"\n  };\n\n  return (\n    <Container>\n      {/* You can change the size of the hexagons by modifing the\n        values in the viewBox  */}\n      <div>\n        <svg viewBox=\"0 0 1350 770\">\n          {/* The hexagon definitions, DO NOT modify */}\n          <defs>\n            <polygon\n              id=\"hexagon\"\n              points=\"50,25 100,25 125,68 100,111 50,111 25,68\"\n              style={hexagonStyle}\n            />\n          </defs>\n          {/* Building the hexagon columns */}\n          {[1, 2, 3, 4, 5, 6, 7, 8].map((a, i) => (\n            <>\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + i + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 2 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 4 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 6 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 8 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 10 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 12 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 14 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 3 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 5 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 7 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 9 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 11 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 13 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 15 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n            </>\n          ))}\n          Sorry, your browser does not support inline SVG.\n        </svg>\n      </div>\n    </Container>\n  );\n};\n\nexport default HexagonGrid;\n\nconst Container = styled.div`\n  margin-left: 2em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Components\nimport HexagonGrid from \"./HexagonGrid\";\n\nconst Grid = () => {\n  return (\n    <Container>\n      <Instructions />\n      <HexagonGrid />\n    </Container>\n  );\n};\n\nexport default Grid;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = ({ label, placeholder, className, onChange }) => {\n  return (\n    <Container className={className}>\n      <Label>{label}</Label>\n      <StyledInput placeholder={placeholder} onChange={onChange} />\n    </Container>\n  );\n};\n\nexport default Input;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.div`\n  font-size: 14px;\n  margin-top: 16px;\n  margin-bottom: 6px;\n`;\n\nconst StyledInput = styled.textarea`\n  align-self: center;\n  width: 90%;\n  height: 120px;\n  border: 3px solid #cccccc;\n  font-family: Tahoma, sans-serif;\n  box-sizing: border-box;\n  padding: 6px;\n  color: #444;\n  font-size: 18px;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"./common/Input\";\n\nclass TextField extends Component {\n  state = {};\n\n  // TODO: functions: handleInputChange, addInput, etc.\n\n  render() {\n    return (\n      <>\n        <Container>\n          <Instructions />\n          <InputContainer>\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((object, i) => (\n              <StyledInput placeholder=\"input...\" label={i + 1} />\n            ))}\n          </InputContainer>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TextField;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n\nconst StyledInput = styled(Input)`\n  background-color: #f5f5f5;\n`;\nconst InputContainer = styled.div``;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../common/Button\";\nimport taskService from \"../../services/taskService\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport Grid from \"../Grid\";\nimport TextField from \"../TextField\";\n\nclass Home extends Component {\n  state = {};\n\n  componentDidMount() {\n    const task = taskService.getEmpty();\n    this.setState({ task }); //inputs\n  }\n  handleSubmitDesc = () => {\n    // get values from 'inputs'\n    // put the values in state, inside the empty 'inputs' array\n    taskService.save({ ...this.state });\n  };\n  render() {\n    return (\n      <>\n        <GridContainer>\n          <h1>Task</h1>\n          <Grid />\n        </GridContainer>\n        <TextFieldContainer>\n          <InputContainer>\n            <TextField />\n          </InputContainer>\n          <StyledButton onClick={this.handleSubmitDesc}>Send</StyledButton>\n        </TextFieldContainer>\n      </>\n    );\n  }\n}\n\nexport default Home;\nconst ElementContainer = styled.div`\n  margin: 1em 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 65vh;\n  overflow: scroll;\n`;\nconst InputContainer = styled(ElementContainer)`\n  max-height: 53vh;\n  border-radius: 4px;\n  transition: all 300ms;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  }\n`;\nconst GridContainer = styled(ElementContainer)``;\nconst StyledButton = styled(Button)`\n  width: 25%;\n  align-self: left;\n  background-color: lightseagreen;\n`;\nconst TextFieldContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nclass ColorPalette extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"pink\",\n      isToggleOn: true\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n  render() {\n    return (\n      <Container>\n        <Yellow onClick={this.handleClick} />\n        <Green onClick={this.handleClick} />\n        <Red onClick={this.handleClick}>\n          {this.state.isToggleOn ? \"ON\" : \"OFF\"}\n        </Red>\n        <Black onClick={this.handleClick} />\n        <Blue onClick={this.handleClick} />\n        <Violet onClick={this.handleClick} />\n        <Orange onClick={this.handleClick} />\n        <Clear onClick={this.handleClick} />\n      </Container>\n    );\n  }\n}\n\nexport default ColorPalette;\n\nconst Container = styled.div`\n  align-self: center;\n  height: 60px;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  transition: all 300ms;\n  border-radius: 4px;\n  cursor: pointer;\n`;\nconst Color = styled.button`\n  width: 40px;\n  height: 40px;\n  margin: 0 7px;\n  border-radius: 50%;\n  border: 1px solid black;\n  background: pink;\n  outline: none;\n  transition: all 300ms;\n\n  &:hover {\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.5);\n  }\n`;\nconst Red = styled(Color)`\n  background: crimson;\n`;\nconst Yellow = styled(Color)`\n  background: gold;\n`;\nconst Green = styled(Color)`\n  background: limegreen;\n`;\nconst Blue = styled(Color)`\n  background: dodgerblue;\n`;\nconst Violet = styled(Color)`\n  background: violet;\n`;\nconst Black = styled(Color)`\n  background: black;\n`;\nconst Orange = styled(Color)`\n  background: orange;\n`;\nconst Clear = styled(Color)`\n  background: white;\n  border-radius: 0%;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport taskService from \"../../services/taskService\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport Grid from \"../Grid\";\nimport ColorPalette from \"../common/ColorPalette\";\nimport Button from \"../common/Button\";\n\nclass Align extends Component {\n  state = {};\n\n  componentDidMount() {\n    const taskToVerify = taskService.getCompletedTask();\n    this.setState({ taskToVerify }); // \"verify\" page\n  }\n  handleSubmitVerificaion = () => {\n    // completedTaskWithVerification.verification.push(new verification)\n    // taskService.save({ completedTaskWithVerification });\n  };\n  render() {\n    return (\n      <>\n        <StepsContainer>\n          <h1>Task</h1>\n          <Step>Show next line of Instructions when user done</Step>\n        </StepsContainer>\n        <GridContainer>\n          <ColorPalette />\n          <Grid />\n          <StyledButton>Done</StyledButton>\n        </GridContainer>\n      </>\n    );\n  }\n}\n\nexport default Align;\n\nconst ElementContainer = styled.div`\n  margin: 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 65vh;\n`;\nconst Step = styled.div``;\nconst StepsContainer = styled(ElementContainer)``;\nconst GridContainer = styled(ElementContainer)`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledButton = styled(Button)`\n  width: 25%;\n  align-self: flex-end;\n  background-color: lightseagreen;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HexagonGrid = () => {\n  let hexagonStyle = {\n    fill: \"white\",\n    stroke: \"black\",\n    \"stroke-width\": \"2\"\n  };\n\n  return (\n    <Container>\n      {/* You can change the size of the hexagons by modifing the\n        values in the viewBox  */}\n      <div>\n        <svg viewBox=\"0 0 1350 770\">\n          {/* The hexagon definitions, DO NOT modify */}\n          <defs>\n            <polygon\n              id=\"hexagon\"\n              stroke=\"#F3BC23\"\n              stroke-width=\"1\"\n              points=\"50,25 100,25 125,68 100,111 50,111 25,68\"\n              style={hexagonStyle}\n            />\n            <text\n              x=\"32\"\n              y=\"50\"\n              text-anchor=\"middle\"\n              fill=\"white\"\n              font-size=\"30\"\n            >\n              X\n            </text>\n          </defs>\n          {/* Building the hexagon columns */}\n          {[1, 2, 3, 4, 5, 6, 7, 8].map((a, i) => (\n            <>\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + i + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 2 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 4 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 6 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 8 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 10 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 12 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 14 * 75 + \",\" + i * 86 + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 3 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 5 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 7 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 9 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 11 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 13 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n              <use\n                xlinkHref=\"#hexagon\"\n                transform={\"translate(\" + 15 * 75 + \",\" + (i * 86 + 43) + \")\"}\n              />\n            </>\n          ))}\n          Sorry, your browser does not support inline SVG.\n        </svg>\n      </div>\n    </Container>\n  );\n};\n\nexport default HexagonGrid;\n\nconst Container = styled.div`\n  margin-left: 2em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Components\nimport HexagonGridN from \"./HexagonGridN\";\n\nconst GridN = () => {\n  return (\n    <Container>\n      <Instructions />\n      <HexagonGridN />\n    </Container>\n  );\n};\n\nexport default GridN;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport taskService from \"../../services/taskService\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport GridN from \"../GridN\";\nimport ColorPalette from \"../common/ColorPalette\";\nimport Button from \"../common/Button\";\n\nclass Verify extends Component {\n  state = {};\n\n  componentDidMount() {\n    const taskToVerify = taskService.getCompletedTask();\n    this.setState({ taskToVerify }); // \"verify\" page\n  }\n  handleSubmitVerificaion = () => {\n    // completedTaskWithVerification.verification.push(new verification)\n    // taskService.save({ completedTaskWithVerification });\n  };\n  render() {\n    return (\n      <>\n        <StepsContainer>\n          <h1>Verification Task</h1>\n          <Step>\n            <StepElement>\n              Show next line when user clicks next. In the end the \"Next\" button\n              is replaced with \"Done\". Location of Next/Done buttons may\n              change.\"\n            </StepElement>\n            <NextButton>Next</NextButton>\n          </Step>\n        </StepsContainer>\n        <GridContainer>\n          <ColorPalette />\n          <GridN />\n          {/* <DoneButton>Done</DoneButton> */}\n        </GridContainer>\n      </>\n    );\n  }\n}\n\nexport default Verify;\n\nconst ElementContainer = styled.div`\n  margin: 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 65vh;\n`;\nconst Step = styled.div`\n  display: flex;\n`;\nconst StepsContainer = styled(ElementContainer)``;\nconst StepElement = styled(ElementContainer)`\n  background-color: lightblue;\n  padding: 0.5em;\n  border-radius: 4px;\n`;\nconst GridContainer = styled(ElementContainer)`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n`;\nconst DoneButton = styled(Button)`\n  width: 25%;\n  align-self: flex-end;\n  background-color: lightseagreen;\n`;\nconst NextButton = styled(Button)`\n  background-color: blue;\n  width: 30%;\n  margin-right: 3em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <Container>\n        <MenuContainer>\n          {/* <MenuItem>\n            <MenuItemLink to=\"/instructions\">Instructions</MenuItemLink>\n          </MenuItem> */}\n          <MenuItem>\n            <MenuItemLink to=\"/describe\">Describe</MenuItemLink>\n          </MenuItem>\n          <MenuItem>\n            <MenuItemLink to=\"/align\">Align</MenuItemLink>\n          </MenuItem>\n          <MenuItem>\n            <MenuItemLink to=\"/verify\">Verify</MenuItemLink>\n          </MenuItem>\n        </MenuContainer>\n      </Container>\n    );\n  }\n}\n\nexport default Navbar;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n`;\nconst MenuContainer = styled.li`\n  display: flex;\n  color: #222;\n  list-style: none;\n`;\nconst MenuItemLink = styled(Link)`\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  padding: 20px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: inherit;\n  transition: all 300ms;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);\n  }\n`;\nconst MenuItem = styled.li`\n  padding: 1em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Header = () => {\n  return (\n    <Container>\n      <Title>Hexagon App</Title>\n    </Container>\n  );\n};\n\nexport default Header;\n\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100px;\n  border-bottom: 1px solid #000;\n  background: #fafafa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 24px;\n`;\n\nconst Title = styled.div`\n  font-size: 36px;\n  color: #444;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Footer = () => {\n  return (\n    <Container>\n      <Divider />\n      <Info>© ONLP Lab 2019</Info>\n    </Container>\n  );\n};\n\nexport default Footer;\n\nconst Container = styled.div`\n  width: 500px;\n  margin: 1em auto;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Divider = styled.div`\n  width: 500px;\n  height: 1px;\n  background: #444;\n  margin: 20px 0;\n`;\n\nconst Info = styled.div`\n  color: #444;\n  font-size: 18px;\n  align-self: flex-end;\n`;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\n// components\nimport Home from \"./components/pages/Home\";\nimport Align from \"./components/pages/Align\";\nimport Verify from \"./components/pages/Verify\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Container>\n          <Navbar />\n          <Header />\n          <Content>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/describe\" exact component={Home} />\n              <Route path=\"/align\" exact component={Align} />\n              <Route path=\"/verify\" exact component={Verify} />\n            </Switch>\n          </Content>\n          <Footer />\n        </Container>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  background: #e0e0e0;\n  display: flex;\n  flex-direction: column;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-self: center;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}