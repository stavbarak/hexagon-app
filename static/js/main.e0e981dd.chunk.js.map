{"version":3,"sources":["components/common/Button.js","services/taskService.js","components/HexagonEmptyBoard.js","components/EmptyBoard.js","components/common/Input.js","components/TextField.js","components/pages/Home.js","components/common/ColorPicker.js","components/pages/Align.js","components/HexagonNumberedBoard.js","components/NumberedBoard.js","components/pages/Verify.js","components/Navbar.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Button","_ref","children","onClick","className","react_default","a","createElement","Container","styled","div","_templateObject","BASE_PATH","taskService","getCompletedTask","Axios","get","concat","then","res","data","catch","err","save","task","_id","put","post","savedTask","getEmpty","img","src","inputs","verifications","HexagonEmptyBoard","HexagonEmptyBoard_Container","viewBox","id","points","style","fill","stroke","stroke-width","map","i","j","Fragment","xlinkHref","transform","HexagonEmptyBoard_templateObject","EmptyBoard","EmptyBoard_Container","Instructions","components_HexagonEmptyBoard","EmptyBoard_templateObject","_templateObject2","Input","label","placeholder","onChange","Input_Container","Label","StyledInput","Input_templateObject","Input_templateObject2","textarea","_templateObject3","TextField","state","TextField_Container","TextField_Instructions","InputContainer","object","TextField_StyledInput","Component","TextField_templateObject","TextField_templateObject2","TextField_templateObject3","_templateObject4","Home","handleSubmitDesc","Object","objectSpread","_this","this","setState","BoardContainer","components_EmptyBoard","TextFieldContainer","Home_InputContainer","components_TextField","StyledButton","ElementContainer","Home_templateObject","Home_templateObject2","Home_templateObject3","Home_templateObject4","_templateObject5","ColorPicker","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","currentColor","target","attributes","color","value","_this2","ColorPicker_Container","Color","selected","Clear","ColorPicker_templateObject","button","ColorPicker_templateObject2","ColorPicker_templateObject3","Align","handleSubmitVerificaion","taskToVerify","StepsContainer","Step","Align_BoardContainer","common_ColorPicker","Align_StyledButton","Align_templateObject","Align_templateObject2","Align_templateObject3","Align_templateObject4","Align_templateObject5","HexagonNumberedBoard","HexagonNumberedBoard_Container","x","y","text-anchor","font-size","HexagonNumberedBoard_templateObject","NumberedBoard","NumberedBoard_Container","NumberedBoard_Instructions","components_HexagonNumberedBoard","NumberedBoard_templateObject","NumberedBoard_templateObject2","Verify","Verify_StepsContainer","Verify_Step","StepElement","NextButton","Verify_BoardContainer","components_NumberedBoard","Verify_templateObject","Verify_templateObject2","Verify_templateObject3","Verify_templateObject4","Verify_templateObject5","_templateObject6","_templateObject7","Navbar","Navbar_Container","MenuContainer","MenuItem","MenuItemLink","to","Navbar_templateObject","li","Navbar_templateObject2","Link","Navbar_templateObject3","Navbar_templateObject4","Header","Header_Container","Title","Header_templateObject","Header_templateObject2","Footer","Footer_Container","Divider","Info","Footer_templateObject","Footer_templateObject2","Footer_templateObject3","App","react_router_dom","App_Container","components_Navbar","components_Header","Content","react_router","exact","path","component","components_Footer","App_templateObject","App_templateObject2","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0e981dd.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = ({ children, onClick, className }) => (\n  <Container onClick={onClick} className={className}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n\nconst Container = styled.div`\n  align-self: center;\n  width: 90%;\n  height: 40px;\n  background: blue;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  transition: all 300ms;\n  border-radius: 4px;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import Axios from \"axios\";\n\nconst BASE_PATH = \"/api/task\";\n\n// const Axios = Axios.create({\n//     withCredentials: true,\n// })\n\nexport default {\n  getCompletedTask,\n  save,\n  getEmpty\n};\n\nfunction getCompletedTask() {\n  var queryStr = \"\"; //useless for now\n  return Axios.get(`${BASE_PATH}?${queryStr}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n\nfunction save(task) {\n  if (task._id) {\n    //for edit. Useless for now\n    return Axios.put(`${BASE_PATH}/${task._id}`, task)\n      .then(res => res.data)\n      .catch(err => {\n        throw err;\n      });\n  } else {\n    return Axios.post(`${BASE_PATH}`, task)\n      .then(res => {\n        const savedTask = res.data; //includes the _id from DB\n        return savedTask;\n      })\n      .catch(err => {\n        throw err;\n      });\n  }\n}\n\nfunction getEmpty() {\n  const emptyTask = {\n    img: { _id: \"\", src: \"\" },\n    inputs: [],\n    verifications: []\n  };\n  return emptyTask;\n}\n\nfunction getById(taskId) {\n  if (!taskId) return Promise.reject(\"no task is\");\n  return Axios.get(`${BASE_PATH}/${taskId}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n\nfunction remove(taskId) {\n  return Axios.delete(`${BASE_PATH}/${taskId}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HexagonEmptyBoard = () => {\n  let hexagonStyle = {\n    fill: \"white\",\n    stroke: \"black\",\n    \"stroke-width\": \"2\"\n  };\n\n  return (\n    <Container>\n      <svg viewBox=\"0 0 1350 770\">\n        <defs>\n          <polygon\n            id=\"hexagon\"\n            points=\"50,25 100,25 125,68 100,111 50,111 25,68\"\n            style={hexagonStyle}\n          />\n        </defs>\n        {[0, 1, 2, 3, 4, 5, 6, 7].map(i => {\n          return [0, 2, 4, 6, 8, 10, 12, 14].map(j => {\n            return (\n              <>\n                <use\n                  xlinkHref=\"#hexagon\"\n                  transform={\"translate(\" + j * 75 + \",\" + i * 86 + \")\"}\n                  // style={{ fill: this.state.colorArray[i] }}\n                />\n                <use\n                  xlinkHref=\"#hexagon\"\n                  transform={\n                    \"translate(\" + (j + 1) * 75 + \",\" + (i * 86 + 43) + \")\"\n                  }\n                />\n              </>\n            );\n          });\n        })}\n        Sorry, your browser does not support inline SVG.\n      </svg>\n    </Container>\n  );\n};\n//   return (\n//     <Container>\n//       {/* You can change the size of the hexagons by modifing the\n//         values in the viewBox  */}\n//       <div>\n//         <svg viewBox=\"0 0 1350 770\">\n//           {/* The hexagon definitions, DO NOT modify */}\n//           <defs>\n//             <polygon\n//               id=\"hexagon\"\n//               points=\"50,25 100,25 125,68 100,111 50,111 25,68\"\n//               style={hexagonStyle}\n//             />\n//           </defs>\n//           {/* Building the hexagon columns */}\n//           <>\n//           {[1, 2, 3, 4, 5, 6, 7, 8].map((a, i) => (\n\n//               [2, 4, 6].map((j) => (\n//                 <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + j + \",\" + i * 86 + \")\"}\n//                 // style={{ fill: this.state.colorArray[i] }}\n//               />\n//               ))\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 2 * 75 + \",\" + i * 86 + \")\"}\n//               />\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 4 * 75 + \",\" + i * 86 + \")\"}\n//               />\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 6 * 75 + \",\" + i * 86 + \")\"}\n//               />\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 8 * 75 + \",\" + i * 86 + \")\"}\n//               />\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 10 * 75 + \",\" + i * 86 + \")\"}\n//               />\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 12 * 75 + \",\" + i * 86 + \")\"}\n//               />\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 14 * 75 + \",\" + i * 86 + \")\"}\n//               />\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 75 + \",\" + (i * 86 + 43) + \")\"}\n//               />\n// <use\n//   xlinkHref=\"#hexagon\"\n//   transform={\"translate(\" + 3 * 75 + \",\" + (i * 86 + 43) + \")\"}\n// />\n\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 5 * 75 + \",\" + (i * 86 + 43) + \")\"}\n//               />\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 7 * 75 + \",\" + (i * 86 + 43) + \")\"}\n//               />\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 9 * 75 + \",\" + (i * 86 + 43) + \")\"}\n//               />\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 11 * 75 + \",\" + (i * 86 + 43) + \")\"}\n//               />\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 13 * 75 + \",\" + (i * 86 + 43) + \")\"}\n//               />\n//               <use\n//                 xlinkHref=\"#hexagon\"\n//                 transform={\"translate(\" + 15 * 75 + \",\" + (i * 86 + 43) + \")\"}\n//               />\n//             </>\n//           ))}\n//           Sorry, your browser does not support inline SVG.\n//         </svg>\n//       </div>\n//     </Container>\n//   );\n// };\n\nexport default HexagonEmptyBoard;\n\nconst Container = styled.div`\n  margin-left: 2em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Components\nimport HexagonEmptyBoard from \"./HexagonEmptyBoard\";\n\nconst EmptyBoard = () => {\n  return (\n    <Container>\n      <Instructions />\n      <HexagonEmptyBoard />\n    </Container>\n  );\n};\n\nexport default EmptyBoard;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = ({ label, placeholder, className, onChange }) => {\n  return (\n    <Container className={className}>\n      <Label>{label}</Label>\n      <StyledInput placeholder={placeholder} onChange={onChange} />\n    </Container>\n  );\n};\n\nexport default Input;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.div`\n  font-size: 14px;\n  margin-top: 16px;\n  margin-bottom: 6px;\n`;\n\nconst StyledInput = styled.textarea`\n  align-self: center;\n  width: 90%;\n  height: 120px;\n  border: 3px solid #cccccc;\n  font-family: Tahoma, sans-serif;\n  box-sizing: border-box;\n  padding: 6px;\n  color: #444;\n  font-size: 18px;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"./common/Input\";\n\nclass TextField extends Component {\n  state = {};\n\n  // TODO: functions: handleInputChange, addInput, etc.\n\n  render() {\n    return (\n      <>\n        <Container>\n          <Instructions />\n          <InputContainer>\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((object, i) => (\n              <StyledInput placeholder=\"input...\" label={i + 1} />\n            ))}\n          </InputContainer>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TextField;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n\nconst StyledInput = styled(Input)`\n  background-color: #f5f5f5;\n`;\nconst InputContainer = styled.div``;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../common/Button\";\nimport taskService from \"../../services/taskService\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport EmptyBoard from \"../EmptyBoard\";\nimport TextField from \"../TextField\";\n\nclass Home extends Component {\n  state = {};\n\n  componentDidMount() {\n    const task = taskService.getEmpty();\n    this.setState({ task }); //inputs\n  }\n  handleSubmitDesc = () => {\n    // get values from 'inputs'\n    // put the values in state, inside the empty 'inputs' array\n    taskService.save({ ...this.state });\n  };\n  render() {\n    return (\n      <>\n        <BoardContainer>\n          <h1>Task</h1>\n          <EmptyBoard />\n        </BoardContainer>\n        <TextFieldContainer>\n          <InputContainer>\n            <TextField />\n          </InputContainer>\n          <StyledButton onClick={this.handleSubmitDesc}>Send</StyledButton>\n        </TextFieldContainer>\n      </>\n    );\n  }\n}\n\nexport default Home;\nconst ElementContainer = styled.div`\n  margin: 1em 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 65vh;\n  overflow: scroll;\n`;\nconst InputContainer = styled(ElementContainer)`\n  max-height: 53vh;\n  border-radius: 4px;\n  transition: all 300ms;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  }\n`;\nconst BoardContainer = styled(ElementContainer)``;\nconst StyledButton = styled(Button)`\n  width: 25%;\n  align-self: left;\n  background-color: lightseagreen;\n`;\nconst TextFieldContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentColor: \"pink\"\n    };\n  }\n\n  handleClick = e => {\n    this.setState({\n      currentColor: e.target.attributes.color.value\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        {[\n          \"gold\",\n          \"limegreen\",\n          \"crimson\",\n          \"black\",\n          \"dodgerblue\",\n          \"violet\",\n          \"orange\"\n        ].map(color => (\n          <Color\n            color={color}\n            selected={color === this.state.currentColor}\n            onClick={this.handleClick}\n          />\n        ))}\n        <Clear\n          color=\"white\"\n          selected={this.state.currentColor === \"white\"}\n          onClick={this.handleClick}\n        />\n        {/* <CurrentColor color={this.state.currentColor} /> */}\n      </Container>\n    );\n  }\n}\n\nexport default ColorPicker;\n\nconst Container = styled.div`\n  align-self: center;\n  height: 60px;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  transition: all 300ms;\n  border-radius: 4px;\n  cursor: pointer;\n`;\nconst Color = styled.button`\n  background: ${props => props.color};\n  width: 3em;\n  height: 3em;\n  margin: 0 0.5em;\n  border-radius: 50%;\n  border: 1px solid black;\n  outline: none;\n  box-shadow: ${props =>\n    props.selected ? \"0 5px 10px rgba(0, 0, 0, 0.8)\" : \"\"};\n  transition: all 300ms;\n\n  &:hover {\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.8);\n  }\n`;\nconst Clear = styled(Color)`\n  border-radius: 0%;\n`;\n// const CurrentColor = styled(Color)`\n//   width: 1.5em;\n//   height: 1.5em;\n//   margin-left: 2em;\n// `;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport taskService from \"../../services/taskService\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport EmptyBoard from \"../EmptyBoard\";\nimport ColorPicker from \"../common/ColorPicker\";\nimport Button from \"../common/Button\";\n\nclass Align extends Component {\n  state = {};\n\n  componentDidMount() {\n    const taskToVerify = taskService.getCompletedTask();\n    this.setState({ taskToVerify }); // \"verify\" page\n  }\n  handleSubmitVerificaion = () => {\n    // completedTaskWithVerification.verification.push(new verification)\n    // taskService.save({ completedTaskWithVerification });\n  };\n  render() {\n    return (\n      <>\n        <StepsContainer>\n          <h1>Task</h1>\n          <Step>Show next line of Instructions when user done</Step>\n        </StepsContainer>\n        <BoardContainer>\n          <ColorPicker />\n          <EmptyBoard />\n          <StyledButton>Done</StyledButton>\n        </BoardContainer>\n      </>\n    );\n  }\n}\n\nexport default Align;\n\nconst ElementContainer = styled.div`\n  margin: 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 65vh;\n`;\nconst Step = styled.div``;\nconst StepsContainer = styled(ElementContainer)``;\nconst BoardContainer = styled(ElementContainer)`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledButton = styled(Button)`\n  width: 25%;\n  align-self: flex-end;\n  background-color: lightseagreen;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HexagonNumberedBoard = () => {\n  let hexagonStyle = {\n    fill: \"white\",\n    stroke: \"black\",\n    \"stroke-width\": \"2\"\n  };\n\n  return (\n    <Container>\n      <svg viewBox=\"0 0 1350 770\">\n        <defs>\n          <polygon\n            id=\"hexagon\"\n            points=\"50,25 100,25 125,68 100,111 50,111 25,68\"\n            style={hexagonStyle}\n          />\n          <text x=\"32\" y=\"50\" text-anchor=\"middle\" fill=\"white\" font-size=\"30\">\n            X\n          </text>\n        </defs>\n        {[0, 1, 2, 3, 4, 5, 6, 7].map(i => {\n          return [0, 2, 4, 6, 8, 10, 12, 14].map(j => {\n            return (\n              <>\n                <use\n                  xlinkHref=\"#hexagon\"\n                  transform={\"translate(\" + j * 75 + \",\" + i * 86 + \")\"}\n                  // style={{ fill: this.state.colorArray[i] }}\n                />\n                <use\n                  xlinkHref=\"#hexagon\"\n                  transform={\n                    \"translate(\" + (j + 1) * 75 + \",\" + (i * 86 + 43) + \")\"\n                  }\n                />\n              </>\n            );\n          });\n        })}\n        Sorry, your browser does not support inline SVG.\n      </svg>\n    </Container>\n  );\n};\n\nexport default HexagonNumberedBoard;\n\nconst Container = styled.div`\n  margin-left: 2em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Components\nimport HexagonNumberedBoard from \"./HexagonNumberedBoard\";\n\nconst NumberedBoard = () => {\n  return (\n    <Container>\n      <Instructions />\n      <HexagonNumberedBoard />\n    </Container>\n  );\n};\n\nexport default NumberedBoard;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport taskService from \"../../services/taskService\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport NumberedBoard from \"../NumberedBoard\";\nimport ColorPicker from \"../common/ColorPicker\";\nimport Button from \"../common/Button\";\n\nclass Verify extends Component {\n  state = {};\n\n  componentDidMount() {\n    const taskToVerify = taskService.getCompletedTask();\n    this.setState({ taskToVerify }); // \"verify\" page\n  }\n  handleSubmitVerificaion = () => {\n    // completedTaskWithVerification.verification.push(new verification)\n    // taskService.save({ completedTaskWithVerification });\n  };\n  render() {\n    return (\n      <>\n        <StepsContainer>\n          <h1>Verification Task</h1>\n          <Step>\n            <StepElement>\n              Show next line when user clicks next. In the end the \"Next\" button\n              is replaced with \"Done\". Location of Next/Done buttons may\n              change.\"\n            </StepElement>\n            <NextButton>Next</NextButton>\n          </Step>\n        </StepsContainer>\n        <BoardContainer>\n          <ColorPicker />\n          <NumberedBoard />\n          {/* <DoneButton>Done</DoneButton> */}\n        </BoardContainer>\n      </>\n    );\n  }\n}\n\nexport default Verify;\n\nconst ElementContainer = styled.div`\n  margin: 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 65vh;\n`;\nconst Step = styled.div`\n  display: flex;\n`;\nconst StepsContainer = styled(ElementContainer)``;\nconst StepElement = styled(ElementContainer)`\n  background-color: lightblue;\n  padding: 0.5em;\n  border-radius: 4px;\n`;\nconst BoardContainer = styled(ElementContainer)`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n`;\nconst DoneButton = styled(Button)`\n  width: 25%;\n  align-self: flex-end;\n  background-color: lightseagreen;\n`;\nconst NextButton = styled(Button)`\n  background-color: blue;\n  width: 30%;\n  margin-right: 3em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <Container>\n        <MenuContainer>\n          {/* <MenuItem>\n            <MenuItemLink to=\"/instructions\">Instructions</MenuItemLink>\n          </MenuItem> */}\n          <MenuItem>\n            <MenuItemLink to=\"/describe\">Describe</MenuItemLink>\n          </MenuItem>\n          <MenuItem>\n            <MenuItemLink to=\"/align\">Align</MenuItemLink>\n          </MenuItem>\n          <MenuItem>\n            <MenuItemLink to=\"/verify\">Verify</MenuItemLink>\n          </MenuItem>\n        </MenuContainer>\n      </Container>\n    );\n  }\n}\n\nexport default Navbar;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n`;\nconst MenuContainer = styled.li`\n  display: flex;\n  color: #222;\n  list-style: none;\n`;\nconst MenuItemLink = styled(Link)`\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  padding: 20px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: inherit;\n  transition: all 300ms;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);\n  }\n`;\nconst MenuItem = styled.li`\n  padding: 1em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Header = () => {\n  return (\n    <Container>\n      <Title>Hexagon App</Title>\n    </Container>\n  );\n};\n\nexport default Header;\n\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100px;\n  border-bottom: 1px solid #000;\n  background: #fafafa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 24px;\n`;\n\nconst Title = styled.div`\n  font-size: 36px;\n  color: #444;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Footer = () => {\n  return (\n    <Container>\n      <Divider />\n      <Info>© ONLP Lab 2019</Info>\n    </Container>\n  );\n};\n\nexport default Footer;\n\nconst Container = styled.div`\n  width: 500px;\n  margin: 1em auto;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Divider = styled.div`\n  width: 500px;\n  height: 1px;\n  background: #444;\n  margin: 20px 0;\n`;\n\nconst Info = styled.div`\n  color: #444;\n  font-size: 18px;\n  align-self: flex-end;\n`;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\n// components\nimport Home from \"./components/pages/Home\";\nimport Align from \"./components/pages/Align\";\nimport Verify from \"./components/pages/Verify\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Container>\n          <Navbar />\n          <Header />\n          <Content>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/describe\" exact component={Home} />\n              <Route path=\"/align\" exact component={Align} />\n              <Route path=\"/verify\" exact component={Verify} />\n            </Switch>\n          </Content>\n          <Footer />\n        </Container>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  background: #e0e0e0;\n  display: flex;\n  flex-direction: column;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-self: center;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}